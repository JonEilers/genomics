Introduction
============

Pacbio and Oxford Nanopore technologies sequencing platforms produce
long reads. Both platforms have unique challenges with regards to
quality control. In this section I will walk through using a variety of
tools to assess the quality of reads or raw data generated by these
platforms.

Pacbio Sequence Data
====================

Raw pacbio data can be in two formats. The first is a BAM file
containing the raw full-length passes of the sequencing which includes
subreads, errors, primers, and the smart bell sequence. The second file
format are fastq sequences in which the subreads have been collapsed
into consensus sequences and hopefully contain few errors. See below for
some images summarizing this.

{% include gallery id=“gallery_pacbio” %}

Downloading data
----------------

Pacbio CLR data from a *Stichopus chloronotus* genome sequencing project
can be downloaded using the following command.

.. code:: bash

   # creating conda environment for NCBI's sra tools
   conda create -n sratools
   conda activate sratools
   conda install -c bioconda sra-tools 

   # downloading the sra and bam files
   # the -X is setting the largest file size to 100 gigabytes
   prefetch -X 100G SRR8499555,SRR8499556,SRR8499557,SRR8499558

   # this is to extract the fastq files from the sra files
   fasterq-dump *.sra

Conveniently, this downloads both the compressed fastq files in sra
format and the subread.bam files, aka pacbio raw data. However, when
running the fastq files through nanoplot or fastqc there are no phred
scores.

SequelTools
-----------

Raw pacbio data can be in two formats. The first is a BAM file
containing the raw smartbell sequences aligned to themselves. A great
tool for checking the stats of the subread bam files is
`SequelTools <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7532105/>`__.
The github page for this tool can be found
`here <https://github.com/ISUgenomics/SequelTools>`__

Installing sequeltools
----------------------

which is a pain. I am always surprised to come across well made tools
that don’t have conda packages available. There is no version associated
with the tool. So whatever was available on 17 January 2022.

.. code:: bash

   # downloading the github respository and making the files executable
   git clone https://github.com/ISUgenomics/SequelTools.git
   cd SequelTools/Scripts
   chmod +x *.sh *.py *.R

   # making it callable from the command line
   export PATH=$PATH:/home/jon/Working_Files/sea_cuke_species_data/stichopus_chloronotus/SequelTools/Scripts

   # creating a conda environment for installing dependencies
   conda create -n sequeltools
   conda activate sequeltools

   conda install -c anaconda python 
   conda install -c conda-forge r 
   conda install -c bioconda samtools 

   # my desktop was missing a ubuntu library
   sudo apt install libncurses5

   # requires a text file containing a list of subread.bam file locations.
   # change directory to whereever your subreads.bam files are and run this command
   find $(pwd) -name "*subreads.bam"  > subFiles.txt

   # and finally we can run it. 
   SequelTools.sh \
     -p a \
     -n 40 \
     -t Q \
     -u /home/jon/Working_Files/sea_cuke_species_data/stichopus_chloronotus/pacbio/sra/SRR8499556/subFiles.txt

Note: I ran into some dependency troubles when using conda to install
python, r, and samtools. If you don’t install in the correct order you
might end up with incompatible versions and errors such as I was getting
below

.. code:: bash


   # Error number 1 
   Running in NO_SCRAPS mode
   samtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory
   samtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory
   samtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory
   samtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory
   Traceback (most recent call last):
     File "/home/jon/Working_Files/sea_cuke_species_data/stichopus_chloronotus/SequelTools/Scripts/generateReadLenStats_noScraps.py", line 107, in <module>
       subMean = Mean(subReadLens)
     File "/home/jon/Working_Files/sea_cuke_species_data/stichopus_chloronotus/SequelTools/Scripts/generateReadLenStats_noScraps.py", line 37, in Mean
       mn = float(sum(listx)) / float(len(listx))
   ZeroDivisionError: float division by zero
   ERROR: Calculation of read length statistics failed!

   # Error number 2
   Running in NO_SCRAPS mode
   /home/jon/miniconda3/envs/sequeltools/lib/R/bin/exec/R: error while loading shared libraries: libreadline.so.6: cannot open shared object file: No such file or directory
   SequelTools has finished!

The first one is a samtools version problem. The second error is a
problem with whatever version of R I had installed. Specifically it
didn’t like the readline package version. I removed the conda
environment, recreated it, and tried various orders of installation
until one worked. Not sure why, but the version that is currently
working for me can be found below

.. code:: bash

   python                    3.10.2          h62f1059_0_cpython    conda-forge
   r                         4.0             r40hd8ed1ab_1004    conda-forge
   r-base                    4.0.5                h9e01966_1    conda-forge
   samtools                  1.14                 hb421002_0    bioconda

Results
-------

+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| SM  | n | nu | t  | to  | me | mea | me  | med  | n | n | l | l | P | Z |
| RTc | u | mR | ot | tal | an | nRe | dia | ianR | 5 | 5 | 5 | 5 | S | O |
| ell | m | ea | al | Bas | Re | adL | nRe | eadL | 0 | 0 | 0 | 0 | R | R |
|     | R | ds | Ba | esL | ad | enL | adL | enLo | S | L | S | L |   |   |
|     | e | Lo | se | ong | Le | ong | enS | nges | u | o | u | o |   |   |
|     | a | ng | sS | est | nS | est | ubr | tSub | b | n | b | n |   |   |
|     | d | es | ub | Sub | ub | Sub | ead |      | r | g | r | g |   |   |
|     | s | tS | re |     | re |     |     |      | e | e | e | e |   |   |
|     | S | ub | ad |     | ad |     |     |      | a | s | a | s |   |   |
|     | u |    |    |     |    |     |     |      | d | t | d | t |   |   |
|     | b |    |    |     |    |     |     |      |   | S |   | S |   |   |
|     | r |    |    |     |    |     |     |      |   | u |   | u |   |   |
|     | e |    |    |     |    |     |     |      |   | b |   | b |   |   |
|     | a |    |    |     |    |     |     |      |   |   |   |   |   |   |
|     | d |    |    |     |    |     |     |      |   |   |   |   |   |   |
+=====+===+====+====+=====+====+=====+=====+======+===+===+===+===+===+===+
| m5  | 3 | 25 | 39 | 3   | 1  | 12  | 9   | 1    | 1 | 1 | 8 | 6 | 0 | 0 |
| 416 | 4 | 39 | 67 | 216 | 15 | 667 | 869 | 1425 | 8 | 9 | 2 | 3 | . | . |
| 6_1 | 2 | 42 | 62 | 719 | 73 |     |     |      | 1 | 2 | 2 | 4 | 8 | 7 |
| 801 | 8 |    | 66 | 790 |    |     |     |      | 3 | 4 | 6 | 9 | 1 | 4 |
| 12_ | 3 |    | 65 |     |    |     |     |      | 9 | 1 | 0 | 8 | 1 | 1 |
| 151 | 9 |    |    |     |    |     |     |      |   |   |   |   |   |   |
| 252 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 5 | 39 | 62 | 4   | 1  | 12  | 9   | 1    | 1 | 1 | 1 | 9 | 0 | 0 |
| 416 | 4 | 07 | 25 | 993 | 15 | 779 | 914 | 1733 | 7 | 9 | 3 | 9 | . | . |
| 6_1 | 0 | 96 | 19 | 832 | 07 |     |     |      | 9 | 0 | 0 | 5 | 8 | 7 |
| 801 | 9 |    | 01 | 435 |    |     |     |      | 0 | 9 | 7 | 4 | 0 | 2 |
| 12_ | 6 |    | 56 |     |    |     |     |      | 5 | 5 | 8 | 4 | 2 | 2 |
| 050 | 9 |    |    |     |    |     |     |      |   |   | 9 |   |   |   |
| 112 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 4 | 32 | 57 | 4   | 1  | 13  | 10  | 1    | 1 | 2 | 1 | 8 | 0 | 0 |
| 416 | 6 | 46 | 32 | 500 | 23 | 861 | 966 | 3255 | 8 | 0 | 1 | 5 | . | . |
| 6_1 | 3 | 53 | 59 | 161 | 79 |     |     |      | 8 | 1 | 5 | 5 | 7 | 7 |
| 801 | 0 |    | 62 | 543 |    |     |     |      | 5 | 7 | 2 | 1 | 8 | 0 |
| 09_ | 8 |    | 48 |     |    |     |     |      | 7 | 6 | 6 | 1 | 5 | 1 |
| 064 | 4 |    |    |     |    |     |     |      |   |   | 3 |   |   |   |
| 435 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 5 | 41 | 66 | 5   | 1  | 12  | 9   | 1    | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 8 | 14 | 55 | 255 | 14 | 774 | 756 | 1654 | 7 | 9 | 3 | 0 | . | . |
| 6_1 | 1 | 07 | 16 | 170 | 40 |     |     |      | 9 | 3 | 8 | 3 | 7 | 7 |
| 801 | 7 |    | 20 | 929 |    |     |     |      | 9 | 1 | 8 | 5 | 9 | 0 |
| 09_ | 2 |    | 70 |     |    |     |     |      | 5 | 4 | 7 | 3 |   | 7 |
| 145 | 6 |    |    |     |    |     |     |      |   |   | 9 | 8 |   |   |
| 019 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 9 | 69 | 90 | 7   | 96 | 10  | 7   | 8742 | 1 | 1 | 2 | 1 | 0 | 0 |
| 416 | 3 | 19 | 21 | 336 | 44 | 602 | 589 |      | 6 | 7 | 0 | 5 | . | . |
| 6_1 | 5 | 54 | 77 | 062 |    |     |     |      | 1 | 3 | 3 | 6 | 8 | 7 |
| 801 | 4 |    | 42 | 365 |    |     |     |      | 0 | 2 | 6 | 8 | 1 | 4 |
| 14_ | 7 |    | 08 |     |    |     |     |      | 8 | 2 | 4 | 3 | 3 |   |
| 075 | 3 |    |    |     |    |     |     |      |   |   | 0 | 6 |   |   |
| 245 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 5 | 39 | 66 | 5   | 1  | 13  | 10  | 1    | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 6 | 89 | 32 | 252 | 17 | 166 | 262 | 2261 | 8 | 9 | 3 | 0 | . | . |
| 6_1 | 2 | 69 | 75 | 789 | 97 |     |     |      | 1 | 3 | 7 | 3 | 7 | 7 |
| 801 | 2 |    | 60 | 852 |    |     |     |      | 4 | 9 | 8 | 3 | 9 | 1 |
| 13_ | 2 |    | 65 |     |    |     |     |      | 4 | 1 | 8 | 3 | 2 |   |
| 214 | 6 |    |    |     |    |     |     |      |   |   | 8 | 5 |   |   |
| 247 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 4 | 33 | 54 | 4   | 1  | 13  | 10  | 1    | 1 | 1 | 1 | 8 | 0 | 0 |
| 416 | 6 | 24 | 35 | 322 | 17 | 003 | 243 | 2018 | 8 | 9 | 1 | 5 | . | . |
| 6_1 | 1 | 41 | 69 | 604 | 74 |     |     |      | 1 | 3 | 3 | 3 | 7 | 7 |
| 801 | 6 |    | 12 | 969 |    |     |     |      | 2 | 0 | 1 | 5 | 9 | 2 |
| 13_ | 5 |    | 43 |     |    |     |     |      | 9 | 6 | 2 | 9 | 5 |   |
| 012 | 2 |    |    |     |    |     |     |      |   |   | 6 |   |   |   |
| 305 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 5 | 38 | 58 | 4   | 1  | 12  | 9   | 1    | 1 | 1 | 1 | 9 | 0 | 0 |
| 416 | 2 | 17 | 29 | 811 | 11 | 604 | 409 | 1543 | 7 | 8 | 2 | 7 | . | . |
| 6_1 | 2 | 69 | 83 | 945 | 56 |     |     |      | 5 | 8 | 3 | 1 | 8 | 7 |
| 801 | 5 |    | 19 | 344 |    |     |     |      | 5 | 2 | 9 | 0 | 2 | 3 |
| 13_ | 7 |    | 91 |     |    |     |     |      | 0 | 1 | 6 | 7 | 5 | 1 |
| 113 | 7 |    |    |     |    |     |     |      |   |   | 2 |   |   |   |
| 301 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 7 | 60 | 68 | 5   | 91 | 9   | 7   | 7775 | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 5 | 08 | 76 | 894 | 39 | 811 | 012 |      | 5 | 6 | 6 | 3 | . | . |
| 6_1 | 2 | 06 | 91 | 659 |    |     |     |      | 5 | 4 | 0 | 1 | 8 | 7 |
| 801 | 4 |    | 81 | 617 |    |     |     |      | 0 | 2 | 0 | 6 | 5 | 9 |
| 16_ | 4 |    | 97 |     |    |     |     |      | 2 | 8 | 5 | 5 | 7 | 8 |
| 132 | 9 |    |    |     |    |     |     |      |   |   | 4 | 6 |   |   |
| 703 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 8 | 63 | 75 | 6   | 92 | 10  | 7   | 8059 | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 1 | 85 | 72 | 391 | 57 | 009 | 178 |      | 5 | 6 | 7 | 4 | . | . |
| 6_1 | 8 | 06 | 13 | 055 |    |     |     |      | 5 | 5 | 5 | 1 | 8 | 7 |
| 801 | 0 |    | 34 | 156 |    |     |     |      | 6 | 7 | 7 | 7 | 4 | 8 |
| 16_ | 2 |    | 54 |     |    |     |     |      | 3 | 3 | 6 | 8 | 4 | 1 |
| 031 | 0 |    |    |     |    |     |     |      |   |   | 8 | 7 |   |   |
| 729 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 8 | 63 | 76 | 6   | 93 | 10  | 7   | 8064 | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 1 | 89 | 13 | 424 | 33 | 055 | 231 |      | 5 | 6 | 7 | 4 | . | . |
| 6_1 | 5 | 82 | 11 | 982 |    |     |     |      | 6 | 6 | 5 | 2 | 8 | 7 |
| 801 | 7 |    | 60 | 643 |    |     |     |      | 6 | 1 | 8 | 0 | 4 | 8 |
| 15_ | 0 |    | 67 |     |    |     |     |      | 3 | 6 | 1 | 7 | 4 | 3 |
| 070 | 9 |    |    |     |    |     |     |      |   |   | 3 | 1 |   |   |
| 217 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+
| m5  | 8 | 63 | 72 | 6   | 89 | 9   | 6   | 7700 | 1 | 1 | 1 | 1 | 0 | 0 |
| 416 | 0 | 02 | 16 | 109 | 89 | 694 | 893 |      | 5 | 6 | 7 | 3 | . | . |
| 6_1 | 2 | 39 | 85 | 733 |    |     |     |      | 2 | 1 | 0 | 8 | 8 | 7 |
| 801 | 8 |    | 04 | 242 |    |     |     |      | 1 | 8 | 5 | 1 | 4 | 8 |
| 15_ | 2 |    | 79 |     |    |     |     |      | 4 | 9 | 6 | 9 | 7 | 5 |
| 170 | 8 |    |    |     |    |     |     |      |   |   | 5 | 8 |   |   |
| 810 |   |    |    |     |    |     |     |      |   |   |   |   |   |   |
+-----+---+----+----+-----+----+-----+-----+------+---+---+---+---+---+---+

The current version of sequeltools only outputs pdf files, that’s not
very helpful for adding photos to this website so I converted the pdfs
to jpeg using poppler per this guy’s blog
`post <https://jdhao.github.io/2019/11/14/convert_pdf_to_images_pdftoppm/>`__

.. code:: bash

   conda install -c conda-forge poppler

   # and a simple bash loop over all the files in a directory.
   # It will complain about some files not being pdf. that's fine

   for file in *;
   do 

   pdftoppm -singlefile \
       -png \
       $file \
       $file
   done

Note: you could also just edit the R script for plotting these graphs
and change the pdf to png and tweak the output. I didn’t as it felt like
more effort.

{% include gallery id=“gallery_sequeltools” %}

Cool. So I am only showing graphs from one of the pacbio sra from ncbi.
Going from left to right. Subread length ranges from very short to near
50kb long with an N50 sitting near 20kb and the total number of bases
produced by each run ranged from 4000b to 7000mb. Just to note these are
subreads, meaning they haven’t been collapsed into consensus sequence
fastq file and represent raw data.

{% include gallery id=“gallery_sequeltools_2” %}

“PSR (polymerase to subread ratio) is the total bases from the longest
subreads per CLR divided by the total bases from subreads. This is a
measure of the effectiveness of library preparation. When PSR is close
to one the DNA template is mostly the reads of interest, whereas a total
failure of library preparation would result in no reads of interest and
a PSR of zero.” Based on this excerpt from the sequeltools paper, the
PSR of these runs are probably acceptable.

ZOR (ZMW occupancy ratio) is calculated as the number of CLRs with
subreads divided by the number of subreads. This is a measure of the
effectiveness of matching DNA templates with ZMW’s. When ZOR is zero
there are no DNA templates in ZMWs. When ZOR is above one then there are
more than one DNA template per ZMW on average; ideally, this value is
exactly one.” Based on this excerpt from the sequeltools paper, the ZOR
is also probably ok.

Oxford Nanopore Technologies’ Sequence Data
===========================================

|image1|\ {: .align-right width=“400px” height=“400px”} Data created by
Oxford Nanopore Technologies platforms is fundamentally different than
Pacbio raw data. As a DNA sequence goes through a biological nanopore,
it changes an electrical signal which can be interpretted to represent
different bases. The resulting data is stored in Fast5 format. Although
recent
`publications <https://www.nature.com/articles/s41587-021-01147-4>`__
suggest this may change. As there is no fast5 formatted sea cucumber
data available on NCBI we will have to settle with analyzing nanopore
data that has been “basecalled” already. Meaning an algorithm as
interpretted the signal generated by the dna traveling through the pore
and written the results to a fastq file. The image to the right gives an
example of what this looks like.

.. _downloading-data-1:

Downloading data
----------------

To download the long read data from NCBI for the genome sequencing
project of *Chiridota heheva* see below

.. code:: bash

   conda activate sratools
   prefetch SRR15466781
   cd SRR15466781
   fasterq-dump *.sra

Nanoplot
--------

The tool that I like to use for investigating the ONT read data is
called
`Nanoplot <https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty149/4934939>`__
and more information can be found on their github
`page <https://github.com/wdecoster/NanoPlot>`__

Installing and running Nanoplot
-------------------------------

version nanoplot-1.39.0

.. code:: bash

   conda create -n nanoplot
   conda activate nanoplot
   conda install -c bioconda nanoplot

running nanoplot

.. code:: bash

   NanoPlot \
       -t 50 \
       -f png \
       --fastq SRR15466781.fastq

Note: Nanoplot has a number of options depending on what kind of data it
is working with. For example, if your ONT data was basecalled usning
Minknow then additional information is stored in the fastq headers which
Nanoplot can extract and plot. Unfortunately, this long read data does
not have that information.

.. _results-1:

Results
-------

Nanoplot creates a number of images to peruse, even when run using a
standard long read fastq file as input. Additionally, it produces some
excellent interactive html files. The interactive results can be found
`here </nanoplot_report/>`__. Additionally, it should be noted that the
basic nanoplot fastq function can also be used on fastq files from
pacbio.

.. code:: bash

   Mean read length:                 14,604.5
   Mean read quality:                    10.3
   Median read length:               10,817.0
   Median read quality:                  10.5
   Number of reads:               2,905,301.0
   Read length N50:                  22,295.0
   STDEV read length:                13,118.4
   Total bases:              42,430,388,059.0
   Number, percentage and megabases of reads above quality cutoffs
   >Q5:    2905301 (100.0%) 42430.4Mb
   >Q7:    2905299 (100.0%) 42430.4Mb
   >Q10:   1914609 (65.9%) 28655.4Mb
   >Q12:   126422 (4.4%) 1402.9Mb
   >Q15:   7 (0.0%) 0.0Mb
   Top 5 highest mean basecall quality scores and their read lengths
   1:  15.7 (388)
   2:  15.5 (485)
   3:  15.3 (308)
   4:  15.2 (216)
   5:  15.2 (193)

So a total of 42 gigabases of data with a median length of 10kb and Q10
phred score. Importantly 28.65 gigabases or 66% of the data had a phred
score above Q10. Highest quality reads topped out at Q15 and those were
all shorter than 400 bases long.

As far as data quality goes, that ain’t great. It means there is likely
an error every ten bases or an accurate base calling rate of ~90%. It is
usable? oh ya. Now let’s take a look at some of these pretty plots
generated by nanoplot.

{% include gallery id=“gallery_nanoplot” %}

Starting left and going right. First plot has average read quality on
the Y axis and read length on the X axis. It gives a nice scatter plot
of quality vs length. In addition it has histograms of the length and
quality. Read length seems to be bimodal - meaning there are two peaks.
Quality has a classic bell shape, showing a normal distribution with a
slight skew towards higher quality values. There is nothing with a phred
score less than 6 so this makes me think the data has been trimmed
already. The second graph is a closer look at the previous plot. The far
right graph shows the read length vs number of bases. This gives us an
idea where the bulk of bases are located - in long vs shorter reads. The
rest of the graphs below are close ups of the histograms essentially.

The author of nanoplot has more interesting plots at his
`blog <https://gigabaseorgigabyte.wordpress.com/2017/06/01/example-gallery-of-nanoplot/>`__.

{% include gallery id=“gallery_nanoplot_2” %}

.. |image1| image:: /assets/images/data_cleaning/long_read_quality/nanopore_dna.jpeg
